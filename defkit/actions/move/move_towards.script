local lookup = require("defkit.internal.lookup")

--- DEFAULT ACTION PROPERTIES
go.property("event", msg.url())

--- CUSTOM ACTION PROPERTIES
go.property("x_var", hash(""))
go.property("x_val", 0)

go.property("y_var", hash(""))
go.property("y_val", 0)

go.property("speed_var", hash(""))
go.property("speed_val", 0)

go.property("relative", false)

--- TARGETTING PROPERTIES
go.property("target_self", false)
go.property("target_other", false)
go.property("target_type", hash(""))

local function get_force(self)
	local x_value = lookup.get_variable(self.x_var, self.x_val)
	local y_value = lookup.get_variable(self.y_var, self.y_val)

	local target_pos = vmath.vector3(x_value, y_value, 0)

	local current_pos = go.get_world_position()

	-- TODO: Given that direction is based on delta, it will be hard to pre-calc this and use set_movement.
	local direction = target_pos - current_pos

	local speed_value = lookup.get_variable(self.speed_var, self.speed_val)
	return direction * speed_value
end

function on_message(self, message_id, message, sender)
	if sender == self.event then
		local velocity = get_force(self)
		if self.target_self then
			msg.post(".", "set_movement", {velocity=velocity, relative=self.relative})
		elseif self.target_other and message.other then
			msg.post(message.other, "set_movement", {velocity=velocity, relative=self.relative})
		elseif self.target_type ~= hash("") then
			local objects = lookup.get_objects_by_type(self.target_type)
			for _,object in pairs(objects) do
				msg.post(object.url, "set_movement", {velocity=velocity, relative=self.relative})
			end
		end
	end
end
